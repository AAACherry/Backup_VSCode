### 06-01 联编

#### 1 、什么是联编

其实就是计算机彼此关联的一个过程，就可以称之为是联编的过程，反映出映射的关系。
比如说在写代码时，在一个函数中调用了另一个函数，这两个函数就联合起来去实现某些功能，这个就可以理解为是一种联合关系。
举例：在函数重载时，我们可以通过实参的不同去决定调用哪一个具体的对于的函数，这个就是通过你函数的调用和你具体的函数体之间有一种对应的关系，可以称之为一种映射关系，通过你的实参就可以决定具体调用哪一个函数，这个也属于是一种联编。

#### 2、动/静态联编

动态联编（动态约束晚期联编）、静态联编（静态约束、早期联编）
1、都属于联编，只不过这两者有一些区别，动态联编的难度更大。
2、静态联编指的是你联编工作是出现在你写代码的这个阶段，也就是说出现的时间比较早。在写代码阶段局已经确定下来（在写代码时就确定调用哪个函数、在哪个地方执行哪一段代码），在代码编译就已经确定了 (函数的实现/函数的调用之间的关系)
3、动态联编出现的时间段是在你程序运行阶段。指的就是有一些时候在编译的阶段，我们不确定你接下来（要调用的函数/在某一个操作下需要执行的代码），不知道它是什么，必须等到程序运行时你才能去确定究竟要调用哪个函数。这就是所谓的动态联编
4、简单来说，联编是属于代码执行的问题。
5、动态联编和静态联编最大的一个区别就是所发生的时间段不一样

#### 3、实现动态联编的条件

静态联编我们经常在用，那么动态联编我们怎么才能去实现它呢？
动态联编是通过多态去体现出来的。

（第 1、2 点属于先决条件，第 3 点是表现形式）
1、先决条件
必须要把动态联编的行为定义为叫做类的虚函数（要有类、要有虚函数，在一个类中必须要有虚函数才行）（要有一个拥有虚函数成员的类）

2、先决条件
要有继承关系，并且拥有虚函数的类要是个父类。

3、表现形式
如何去使用这些东西？
举例：父类类型的指针能够指向派生类的子类的对象。
那么，在这里我们要体现多态，就需要先用基类指针或引用去指向或引用这个派生类对象，然后通过这个指针或引用去调用写成了虚函数的函数成员就可以了（体现多态）
